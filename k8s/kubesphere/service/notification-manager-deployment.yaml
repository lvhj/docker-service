apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  creationTimestamp: "2024-07-13T05:44:25Z"
  generation: 1
  labels:
    app: notification-manager
    notification-manager: notification-manager
  name: notification-manager-deployment
  namespace: kubesphere-monitoring-system
  ownerReferences:
    - apiVersion: notification.kubesphere.io/v2beta2
      blockOwnerDeletion: true
      controller: true
      kind: NotificationManager
      name: notification-manager
      uid: 620545f0-629e-406a-96d8-511317db77cd
  resourceVersion: "17551"
  uid: 6cc31dc3-c23a-44d2-b67e-e852ae02318a
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: notification-manager
      notification-manager: notification-manager
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: notification-manager
        notification-manager: notification-manager
    spec:
      affinity: {}
      containers:
        - env:
            - name: NAMESPACE
              value: kubesphere-monitoring-federated
          image: registry.cn-hangzhou.aliyuncs.com/whatever233/notification-manager:v2.3.0
          imagePullPolicy: IfNotPresent
          name: notification-manager
          ports:
            - containerPort: 19093
              name: webhook
              protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 500Mi
            requests:
              cpu: 5m
              memory: 20Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - image: registry.cn-hangzhou.aliyuncs.com/whatever233/notification-tenant-sidecar:v3.2.0
          imagePullPolicy: IfNotPresent
          name: tenant
          ports:
            - containerPort: 19094
              name: tenant
              protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: notification-manager-sa
      serviceAccountName: notification-manager-sa
      terminationGracePeriodSeconds: 30
