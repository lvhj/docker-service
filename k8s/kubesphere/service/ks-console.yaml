# ks-console.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    meta.helm.sh/release-name: ks-core
    meta.helm.sh/release-namespace: kubesphere-system
  creationTimestamp: "2024-07-13T03:32:10Z"
  generation: 1
  labels:
    app: ks-console
    app.kubernetes.io/managed-by: Helm
    tier: frontend
    version: v3.3.2
  name: ks-console
  namespace: kubesphere-system
  resourceVersion: "5711"
  uid: 0ae78b77-c726-4833-8dd3-d1a9f646ea75
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: ks-console
      tier: frontend
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: ks-console
        tier: frontend
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                  - key: node-role.kubernetes.io/master
                    operator: In
                    values:
                      - ""
              weight: 100
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - ks-console
              namespaces:
                - kubesphere-system
              topologyKey: kubernetes.io/hostname
      containers:
        - image: registry.cn-hangzhou.aliyuncs.com/whatever233/ks-console:v3.4.1
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 8
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 8000
            timeoutSeconds: 15
          name: ks-console
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 20m
              memory: 100Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /opt/kubesphere/console/server/local_config.yaml
              name: ks-console-config
              subPath: local_config.yaml
            - mountPath: /opt/kubesphere/console/server/sample
              name: sample-bookinfo
            - mountPath: /etc/localtime
              name: host-time
              readOnly: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: kubesphere
      serviceAccountName: kubesphere
      terminationGracePeriodSeconds: 30
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 60
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 60
      volumes:
        - configMap:
            defaultMode: 420
            items:
              - key: local_config.yaml
                path: local_config.yaml
            name: ks-console-config
          name: ks-console-config
        - configMap:
            defaultMode: 420
            name: sample-bookinfo
          name: sample-bookinfo
        - hostPath:
            path: /etc/localtime
            type: ""
          name: host-time
